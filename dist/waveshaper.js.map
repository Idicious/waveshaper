{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 741dd79972a71a857691","webpack:///./src/core/waveshaper.ts","webpack:///external {\"root\":\"Hammer\",\"commonjs2\":\"hammerjs\",\"commonjs\":\"hammerjs\",\"amd\":\"hammerjs\",\"umd\":\"hammerjs\"}","webpack:///./src/index.ts","webpack:///./src/core/manager.ts","webpack:///./src/strategies/calculate/peak.ts","webpack:///./src/strategies/calculate/rms.ts","webpack:///./src/strategies/render/line.ts","webpack:///./src/methods/flatten.ts","webpack:///./src/interaction/drag.ts","webpack:///./src/interaction/resize.ts","webpack:///./src/interaction/cut.ts","webpack:///./src/interaction/pan.ts","webpack:///./src/interaction/zoom.ts","webpack:///./src/config/hammerconfig.ts","webpack:///./src/config/managerconfig.ts"],"names":[],"mappings":"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","file":"waveshaper.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"hammerjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"hammerjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveShaper\"] = factory(require(\"hammerjs\"));\n\telse\n\t\troot[\"WaveShaper\"] = factory(root[\"Hammer\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 741dd79972a71a857691","import { MeterType } from '../config/managerconfig';\r\nimport calculatePeaks from '../strategies/calculate/peak'\r\nimport calculateRms from '../strategies/calculate/rms'\r\nimport drawCanvasLine from '../strategies/render/line';\r\nimport Segment from '../models/segment';\r\nimport flattenSegments from '../methods/flatten';\r\nimport Interval from '../models/interval';\r\n\r\nexport interface LastDrawValues {\r\n    meterType: MeterType;\r\n    sampleSize: number;\r\n    samplesPerPixel: number,\r\n    scrollPosition: number,\r\n    samplerate: number\r\n}\r\n\r\nexport default class WaveShaper {\r\n    id: string;\r\n    color: string;\r\n    element: HTMLCanvasElement\r\n    segments: Segment[];\r\n    flattened: Interval[];\r\n    ctx: CanvasRenderingContext2D;\r\n    calculated: number[][];\r\n    width: number;\r\n    height: number;\r\n    skipDraw: boolean = false;\r\n    lastValues: LastDrawValues;\r\n\r\n    constructor(id: string, segments: Segment[], width: number, height: number, color: string) {\r\n        this.element = document.createElement('canvas');\r\n        this.element.setAttribute('data-wave-id', id);\r\n\r\n        this.id = id;\r\n        this.color = color;\r\n        this.segments = segments;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.flatten();\r\n\r\n        this.element.style.width = width + 'px';\r\n        this.element.style.height = height + 'px';\r\n        this.element.classList.add('waveshaper');\r\n\r\n        this.element.width = width * devicePixelRatio;\r\n        this.element.height = height;\r\n        this.ctx = <CanvasRenderingContext2D>this.element.getContext('2d');\r\n        const scale = (devicePixelRatio || 1) < 1 ? 1 : (devicePixelRatio || 1);\r\n        this.ctx.scale(scale, 1);\r\n    }\r\n\r\n    flatten() {\r\n        this.flattened = flattenSegments(this.segments);\r\n    }\r\n\r\n    /**\r\n     * Gets the duration of the audio in seconds\r\n     * \r\n     * @returns {number} Decimal value of total duration in seconds\r\n     */\r\n    getDuration(): number {\r\n        let maxLength = 0;\r\n        for (let segment of this.segments) {\r\n            const end = segment.start + segment.duration;\r\n            if (end > maxLength) {\r\n                maxLength = end;\r\n            }\r\n        }\r\n        return maxLength;\r\n    }\r\n\r\n    /**\r\n     * Gets the duration of the audio as a date\r\n     * \r\n     * @returns {Date} Date containing audio length\r\n     */\r\n    getDurationAsDate(): Date {\r\n        var date = new Date(0);\r\n        date.setTime(this.getDuration() * 1000);\r\n        return date;\r\n    }\r\n\r\n    /**\r\n     * Gets the width of scrollbar needed to scroll through the entire audio file\r\n     * \r\n     * @param {number} samplesPerPixel \r\n     * @param {number} samplerate \r\n     * @returns {number} Scroll width in pixels for the entire audio file\r\n     */\r\n    getScrollWidth(samplesPerPixel: number, samplerate: number) {\r\n        let maxLength = this.getDuration();\r\n        return maxLength * samplerate / samplesPerPixel;\r\n    }\r\n\r\n    /**\r\n     * Gets the summerized values for the current settings\r\n     * \r\n     * @param {string} meterType\r\n     * @param {number} sampleSize\r\n     * @param {number} samplesPerPixel\r\n     * @param {number} scrollPosition\r\n     * @param {boolean} forceDraw\r\n     * @param {Map<string, Float32Array>} dataMap\r\n     * @returns {Array} Two dimensional array, one entry for each pixel, for each pixel a min\r\n     * and a max value.\r\n     */\r\n    calculate(meterType: MeterType, sampleSize: number, samplesPerPixel: number, scrollPosition: number, \r\n        samplerate: number, forceDraw: boolean, dataMap: Map<string, Float32Array>): number[][] {\r\n        if (!forceDraw && this.lastValues != null && this.lastValues.meterType === meterType && this.lastValues.sampleSize === sampleSize &&\r\n            this.lastValues.samplesPerPixel === samplesPerPixel && this.lastValues.scrollPosition === scrollPosition &&\r\n            this.lastValues.samplerate === samplerate) {\r\n\r\n            this.skipDraw = true;\r\n            return this.calculated;\r\n        } else {\r\n            this.skipDraw = false;\r\n            this.lastValues = {\r\n                meterType,\r\n                sampleSize,\r\n                samplesPerPixel,\r\n                scrollPosition,\r\n                samplerate\r\n            }\r\n        }\r\n\r\n        switch (meterType) {\r\n            case 'peak':\r\n                this.calculated = calculatePeaks(\r\n                    sampleSize,\r\n                    samplesPerPixel,\r\n                    this.width,\r\n                    this.flattened,\r\n                    scrollPosition,\r\n                    samplerate,\r\n                    dataMap\r\n                );\r\n                break;\r\n            default:\r\n                this.calculated = calculateRms(\r\n                    sampleSize,\r\n                    samplesPerPixel,\r\n                    this.width,\r\n                    this.flattened,\r\n                    scrollPosition,\r\n                    samplerate,\r\n                    dataMap\r\n                );\r\n        }\r\n        return this.calculated;\r\n    }\r\n\r\n    /**\r\n     * Draws the waveform to the canvas with current settings\r\n     * \r\n     * @param {string} drawStyle\r\n     */\r\n    draw() {\r\n        if (!this.skipDraw) {\r\n            drawCanvasLine(\r\n                this.calculated,\r\n                this.height,\r\n                this.width,\r\n                this.ctx,\r\n                this.color\r\n            );\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/waveshaper.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Hammer\",\"commonjs2\":\"hammerjs\",\"commonjs\":\"hammerjs\",\"amd\":\"hammerjs\",\"umd\":\"hammerjs\"}\n// module id = 1\n// module chunks = 0","import WaveShapeManager from \"./core/manager\";\r\nimport WaveShaper from './core/waveshaper'\r\nimport Segment from './models/segment';\r\n\r\nexport { WaveShapeManager, WaveShaper, Segment };\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import WaveShaper from './waveshaper';\r\nimport Segment from '../models/segment';\r\nimport setupDrag from '../interaction/drag';\r\nimport setupResize from '../interaction/resize';\r\nimport setupCut from '../interaction/cut';\r\nimport setupPan from '../interaction/pan';\r\nimport setupZoom from '../interaction/zoom';\r\nimport * as Hammer from 'hammerjs';\r\nimport hammerconfig from '../config/hammerconfig';\r\nimport defaultOptions, { ManagerOptions, InteractionMode, MeterType, GenerateId } from '../config/managerconfig';\r\n\r\n/**\r\n * \r\n * \r\n * @class\r\n * @export\r\n */\r\nexport default class WaveShapeManager {\r\n\r\n    /**\r\n     * Map of waveshapers managed by the manager\r\n     * \r\n     * @readonly\r\n     * @memberof WaveShapeManager\r\n     */\r\n    public readonly waveShapers = new Map<string, WaveShaper>();\r\n\r\n    /**\r\n     * Map of audio data\r\n     * \r\n     * @readonly\r\n     * @memberof WaveShapeManager\r\n     */\r\n    public readonly audioData = new Map<string, Float32Array>();\r\n\r\n    /**\r\n     * @description Audio samplerate\r\n     * \r\n     * @readonly\r\n     * @memberof WaveShapeManager\r\n     */\r\n    public readonly samplerate: number;\r\n\r\n    /**\r\n     * @description Gesture recogniser\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    public readonly hammer: HammerManager;\r\n\r\n    /**\r\n     * @description Width of draw area in pixels\r\n     * \r\n     * @readonly\r\n     * @memberof WaveShapeManager\r\n     */\r\n    public readonly width: number;\r\n\r\n     /**\r\n     * @description Height of draw area in pixels\r\n     * \r\n     * @readonly\r\n     * @memberof WaveShapeManager\r\n     */\r\n    public readonly height: number;\r\n\r\n\r\n    /**\r\n     * @description Sample range per pixel, zoom level\r\n     * @example Lower value to zoom in, increase to zoom out\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    public samplesPerPixel: number;\r\n\r\n    /**\r\n     * @description Sample size per pixel, determines accuracy\r\n     * @example Lower value to decrease accuracy and increase performance\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    public resolution: number;\r\n\r\n    /**\r\n     * @description Virtual scrolling is used, changing this value pans the waveform\r\n     * @example Lower value to pan left, increase to pan right\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    public scrollPosition: number;\r\n\r\n    /**\r\n     * @description Calculation method used to determine value of sample range\r\n     * @example Peak get the peak values of the range, RMS is similar to average https://en.wikipedia.org/wiki/Root_mean_square\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    public meterType: MeterType;\r\n\r\n    /**\r\n     * @description Active id's, redraws when draw is called without argument\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    public activeWaveShapers: string[] | null;\r\n\r\n    /**\r\n     * @description Interaction mode of the the waveforms\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    public mode: InteractionMode;\r\n\r\n    /**\r\n     * @description Method used to generate new id's\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    public generateId: GenerateId;\r\n\r\n    /**\r\n     * @param {number} samplerate Audio samplerate\r\n     * @param {HTMLElement} container Container element\r\n     * @param {ManagerOptions} [options=defaultOptions] Initial options\r\n     * @throws {Error} Throws an error if samplerate is null or NaN\r\n     * @constructor \r\n     */\r\n    constructor(samplerate: number, container: HTMLElement, options: ManagerOptions = defaultOptions) {\r\n        if(samplerate == null || isNaN(samplerate)) {\r\n            throw new Error('samplerate cannot be null and must be a number');\r\n        }\r\n\r\n        // Merge options and default options so ommited properties are set\r\n        options = { ...defaultOptions, ...options };\r\n        \r\n        // Setup readonly properties\r\n        this.samplerate = samplerate;\r\n        this.width = options.width;\r\n        this.height = options.height;\r\n        \r\n        // Setup variable properties\r\n        this.resolution = options.resolution;\r\n        this.samplesPerPixel = options.samplesPerPixel;\r\n        this.scrollPosition = options.scrollPosition;\r\n        this.meterType = options.meterType;\r\n        this.mode = options.mode;\r\n        this.generateId = options.generateId;\r\n\r\n        //Setup interaction\r\n        this.hammer = new Hammer(container, hammerconfig);\r\n\r\n        setupDrag(this, this.hammer, container);\r\n        setupResize(this, this.hammer);\r\n        setupCut(this, this.hammer);\r\n        setupPan(this, this.hammer);\r\n        setupZoom(this, this.hammer);\r\n    }\r\n    \r\n    /**\r\n     * @description Adds a waveshaper to the manager\r\n     * \r\n     * @param id id of WaveShaper\r\n     * @param segments Segments in wave\r\n     * @param color Background color of segments\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    addWaveShaper(id: string, segments: Segment[], color: string): WaveShaper {\r\n        const foundWave = this.waveShapers.get('id');\r\n        if(foundWave == null) {\r\n            const wave = new WaveShaper(id, segments, this.width, this.height, color);\r\n            this.waveShapers.set(id, wave);\r\n\r\n            return wave;\r\n        } \r\n        \r\n        return foundWave;\r\n    }\r\n\r\n    getWaveShaper(id: string): WaveShaper | undefined {\r\n        return this.waveShapers.get(id);\r\n    }\r\n\r\n    /**\r\n     * @description Adds audio data to the waveshaper and redraws waveshapers using it\r\n     * \r\n     * @param id  Data id, refered to by source parameter of segments\r\n     * @param data AudioBuffer with audio data\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    addAudioData(id: string, data: AudioBuffer) {\r\n        if(!this.audioData.has(id)) {\r\n            this.audioData.set(id, data.getChannelData(0));\r\n            this.draw(this.activeWaveShapers, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Removes the wave with given id from the manager\r\n     * \r\n     * @param id \r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    removeWave(id: string) {\r\n        this.waveShapers.delete(id);\r\n    }\r\n\r\n    /**\r\n     * @description Flattens the segments of the given waveshaper id\r\n     * \r\n     * @param id \r\n     * @memberof WaveShapeManager\r\n     */\r\n    flatten(ids: string[]) {\r\n        for(let i = 0; i < ids.length; i++) {\r\n            const id = ids[i];\r\n            const waveShaper = this.waveShapers.get(id)\r\n            if(waveShaper != null) waveShaper.flatten();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Returns the maximum duration of all the waveshapers managed by this class\r\n     * \r\n     * @returns Maximum duration in seconds\r\n     * @memberof WaveShapeManager\r\n     */\r\n    getDuration(): number {\r\n        var maxDuration = 0;\r\n        for (var wave of Array.from(this.waveShapers.values())) {\r\n            var duration = wave.getDuration();\r\n            if (duration > maxDuration) {\r\n                maxDuration = duration;\r\n            }\r\n        }\r\n        return maxDuration;\r\n    }\r\n\r\n    /**\r\n     * Gets the duration of the audio as a date\r\n     * \r\n     * @returns Date containing audio length\r\n     * @memberof WaveShapeManager\r\n     */\r\n    getDurationAsDate(): Date {\r\n        var date = new Date(0);\r\n        date.setTime(this.getDuration() * 1000);\r\n        return date;\r\n    }\r\n\r\n    /**\r\n     * @description Gets the width of scrollbar needed to scroll through the entire audio file\r\n     * \r\n     * @returns Scroll width in pixels for the entire audio file\r\n     * @memberof WaveShapeManager\r\n     */\r\n    getScrollWidth(): number {\r\n        var maxWidth = 0;\r\n        for (var wave of Array.from(this.waveShapers.values())) {\r\n            const width = wave.getScrollWidth(this.samplesPerPixel, this.samplerate);\r\n            if (width > maxWidth) {\r\n                maxWidth = width;\r\n            }\r\n        }\r\n    \r\n        return maxWidth;\r\n    }\r\n\r\n    /**\r\n     * Draws the waveform to the canvas with current settings, defaults to drawing all activeWaveShapers\r\n     * \r\n     * @param ids Options array of id's to draw\r\n     * @param forceDraw Force redraw of the given waves\r\n     * \r\n     * @memberof WaveShapeManager\r\n     */\r\n    draw(ids: string[] | null, forceDraw: boolean) {\r\n        const idsToDraw = ids == null ? this.activeWaveShapers == null ? Array.from(this.waveShapers.keys()) : this.activeWaveShapers : ids;\r\n        for (var i = 0; i < idsToDraw.length; i++) {\r\n            var wave = this.waveShapers.get(idsToDraw[i]);\r\n            if(wave == null) continue;\r\n\r\n            wave.calculate(\r\n                this.meterType, \r\n                this.resolution, \r\n                this.samplesPerPixel, \r\n                this.scrollPosition,\r\n                this.samplerate,\r\n                forceDraw,\r\n                this.audioData\r\n            );\r\n        }\r\n    \r\n        for (var i = 0; i < idsToDraw.length; i++) {\r\n            var wave = this.waveShapers.get(idsToDraw[i]);\r\n            if(wave == null) continue;\r\n\r\n            wave.draw();\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/manager.ts","import Interval from '../../models/interval';\r\n\r\n/**\r\n * Calculates peak values\r\n * \r\n * @export\r\n * @param resolution \r\n * @param samplesPerPixel \r\n * @param width \r\n * @param intervals \r\n * @param scrollPosition \r\n * @param sampleRate\r\n * @param dataMap\r\n * @returns \r\n */\r\nexport default (resolution: number, samplesPerPixel: number, width: number, intervals: Interval[], \r\n    scrollPosition: number, sampleRate: number, dataMap: Map<string, Float32Array>): number[][] => {\r\n        \r\n    const sampleSize = Math.ceil(samplesPerPixel / resolution);\r\n\r\n    const start = scrollPosition * samplesPerPixel;\r\n    const startSecond = start / sampleRate;\r\n\r\n    const secondsPerPixel = samplesPerPixel / sampleRate;\r\n\r\n    const peaks: number[][] = [];\r\n    // For each pixel we display\r\n    for (let i = 0; i < width; i++) {\r\n        let max = 0;\r\n        let min = 0;\r\n\r\n        const currentSecond = startSecond + ((i * samplesPerPixel) / sampleRate);\r\n        let currentInterval;\r\n        for (let i = 0; i < intervals.length; i++) {\r\n            const interval = intervals[i];\r\n            if (interval.start <= currentSecond && interval.end >= currentSecond) {\r\n                currentInterval = interval;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (currentInterval == null) {\r\n            peaks.push([0, 0, 0, 0]);\r\n            continue;\r\n        }\r\n\r\n        let intervalBorder = 0;\r\n        if (currentSecond + secondsPerPixel > currentInterval.end\r\n            || currentSecond - secondsPerPixel < currentInterval.start) {\r\n            intervalBorder = 1;\r\n        }\r\n\r\n        const buffer = dataMap.get(currentInterval.source);\r\n        if (buffer == null) {\r\n            peaks.push([0, 0, intervalBorder, 1]);\r\n            continue;\r\n        }\r\n\r\n        const offsetStart = currentInterval.start - currentInterval.originalStart;\r\n        const secondsIntoInterval = currentSecond - currentInterval.start;\r\n        const startSample = Math.floor(((secondsIntoInterval + offsetStart) * sampleRate));\r\n\r\n        const endSample = startSample + samplesPerPixel;\r\n        const length = buffer.length;\r\n        const loopEnd = length < endSample ? length : endSample;\r\n\r\n        // Cycle through the data-points relevant to the pixel\r\n        // Don't cycle through more than sampleSize frames per pixel.\r\n        for (let j = startSample; j < loopEnd; j += sampleSize) {\r\n            const sample = buffer[j];\r\n\r\n            // Keep track of positive and negative values separately\r\n            if (sample > max) max = sample;\r\n            else if (sample < min) min = sample;\r\n        }\r\n\r\n        peaks.push([min, max, intervalBorder, 1]);\r\n    }\r\n    return peaks;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/strategies/calculate/peak.ts","import Interval from '../../models/interval';\r\n\r\n/**\r\n * Calculate rms values\r\n * \r\n * @export\r\n * @param resolution \r\n * @param samplesPerPixel \r\n * @param width \r\n * @param intervals \r\n * @param scrollPosition \r\n * @param sampleRate\r\n * @param dataMap\r\n * @returns \r\n */\r\nexport default (resolution: number, samplesPerPixel: number, width: number, intervals: Interval[], \r\n    scrollPosition: number, sampleRate: number, dataMap: Map<string, Float32Array>): number[][] => {\r\n\r\n    const sampleSize = Math.ceil(samplesPerPixel / resolution);\r\n    const start = scrollPosition * samplesPerPixel;\r\n    const startSecond = start / sampleRate;\r\n    const secondsPerPixel = samplesPerPixel / sampleRate;\r\n\r\n    const vals : number[][] = [];\r\n    // For each pixel we display\r\n    for (let i = 0; i < width; i++) {\r\n        let posSum = 0;\r\n        let negSum = 0;\r\n\r\n        const currentSecond = startSecond + ((i * samplesPerPixel) / sampleRate);\r\n        let interval;\r\n        for(let i = 0; i < intervals.length; i++) {\r\n            const s = intervals[i];\r\n            if(s.start <= currentSecond && s.end >= currentSecond) {\r\n                interval = s;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(interval == null) {\r\n            vals.push([0, 0, 0, 0]);\r\n            continue;\r\n        }\r\n        \r\n        let intervalBorder = 0;\r\n        if(currentSecond + secondsPerPixel > interval.end \r\n            || currentSecond - secondsPerPixel < interval.start) {\r\n            intervalBorder = 1;\r\n        }\r\n\r\n        const buffer = dataMap.get(interval.source);\r\n        if(buffer == null) {\r\n            vals.push([0, 0, intervalBorder, 1]);\r\n            continue;\r\n        }\r\n\r\n        const offsetStart = interval.start - interval.originalStart;\r\n        const secondsIntoInterval = currentSecond - interval.start;\r\n        const startSample = Math.floor(((secondsIntoInterval + offsetStart) * sampleRate));\r\n        const length = buffer.length;\r\n        const loopEnd = startSample + samplesPerPixel;\r\n        const end = length < loopEnd ? length : loopEnd;\r\n\r\n        // Cycle through the data-points relevant to the pixel\r\n        // Don't cycle through more than sampleSize frames per pixel.\r\n        for (let j = startSample; j < end; j += sampleSize) {\r\n            const val = buffer[j];\r\n\r\n            // Keep track of positive and negative values separately\r\n            if (val > 0) {\r\n                posSum += val * val;\r\n            } else {\r\n                negSum += val * val;\r\n            }\r\n        }\r\n\r\n        const samples = Math.min(samplesPerPixel / 2, Math.round(resolution / 2));\r\n        const min = -Math.sqrt(negSum / samples);\r\n        const max = Math.sqrt(posSum / samples);\r\n\r\n        vals.push([min, max, intervalBorder, 1]);\r\n    }\r\n    return vals;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/strategies/calculate/rms.ts","/**\r\n * \r\n * \r\n * @export\r\n * @param {number[][]} waveform Sampled data for each pixel, max at 0, min at 1 \r\n * @param {number} height \r\n * @param {number} width \r\n * @param {CanvasRenderingContext2D} ctx \r\n * @param {string} drawStyle \r\n * @param {string} color\r\n */\r\nexport default (waveform: number[][], height: number, width: number, ctx: CanvasRenderingContext2D, color: string) => {\r\n    const scale = height / 2;\r\n    ctx.fillStyle = color;\r\n    ctx.strokeStyle = 'black';\r\n\r\n    const length = waveform.length;\r\n    ctx.clearRect(0, 0, width, height);\r\n    \r\n    for(let i = 0, inSegment = false, segmentStart = 0; i < length; i++) {\r\n        const pointInSegment = waveform[i][3] === 1;\r\n        if(!inSegment && pointInSegment) {\r\n            inSegment = true;\r\n            segmentStart = i;\r\n        } else if (inSegment && (!pointInSegment || i === length - 1)) {\r\n            inSegment = false;\r\n            ctx.fillRect(segmentStart, 0, i - segmentStart, height);\r\n        }\r\n    }\r\n    \r\n    ctx.fillStyle = 'black';\r\n    ctx.beginPath();\r\n    \r\n    ctx.moveTo(0, scale);\r\n    for (let i = 0; i < length; i++) {\r\n        ctx.lineTo(i, Math.round((waveform[i][0] * scale) + scale));\r\n    }\r\n    ctx.lineTo(length - 1, scale);\r\n\r\n    ctx.moveTo(0, scale);\r\n    for (let i = 0; i < length; i++) {\r\n        ctx.lineTo(i, Math.round((waveform[i][1] * scale) + scale));\r\n    }\r\n    ctx.lineTo(length - 1, scale);\r\n    ctx.closePath();\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        if(i != 0 && waveform[i-1][2] === 0 && waveform[i][2] === 1) {\r\n            ctx.rect(i-1, 0, 1, height);\r\n        }\r\n    }\r\n    \r\n    ctx.fill();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/strategies/render/line.ts","import Segment from \"../models/segment\";\r\nimport Interval from \"../models/interval\";\r\n\r\ndeclare type IntervalMap = {[key: string] : Interval[]};\r\n\r\n/**\r\n * The algorithm first calculates real start and end times of each segment,\r\n * sorts them by priority, then start time.\r\n *\r\n * Finally it merges the segments by index so there are no overlapping\r\n * segments and those with highest index are on top.\r\n *\r\n * @export\r\n * @param {Segment[]} segments\r\n * @returns {Interval[]}\r\n */\r\nexport default (segments: Segment[]): Interval[] => {\r\n  var normalized = normalizeIndex(segments);\r\n  var intervals = mapToIntervals(normalized);\r\n  var sorted = sort(intervals);\r\n  var grouped = grouByIndex(sorted);\r\n\r\n  return weightedMerge(grouped);\r\n}\r\n\r\n/**\r\n * When an element is altered the index is set very high,\r\n * this functions normalizes to indexes back to 0\r\n * \r\n * @param {Segment[]} segments \r\n */\r\nconst normalizeIndex = (segments: Segment[]): Segment[] => {\r\n  let index = 0;\r\n  segments.sort((a, b) => cmp(a.index, b.index)).forEach(el => {\r\n    if (el.index > index) {\r\n      el.index = ++index;\r\n    }\r\n    else {\r\n      el.index = index;\r\n    }\r\n  });\r\n  return segments;\r\n}\r\n\r\n/**\r\n * In order to preserve the original segments and allow for extra properties\r\n * the segments are mapped to Intervals\r\n * \r\n * @param {Segment[]} segments \r\n * @returns {Interval[]}\r\n */\r\nconst mapToIntervals = (segments: Segment[]): Interval[] => {\r\n  return segments\r\n    .map(s => {\r\n      return {\r\n        id: s.id,\r\n        start: s.start + s.offsetStart,\r\n        end: s.start + s.duration - s.offsetEnd,\r\n        index: s.index,\r\n        originalStart: s.start,\r\n        source: s.source\r\n      };\r\n    });\r\n}\r\n\r\n/**\r\n * Sorts the intervals by index, then by start\r\n * \r\n * @param {Interval[]} intervals \r\n * @return {Interval[]}\r\n */\r\nconst sort = (intervals: Interval[]): Interval[] => {\r\n  intervals.sort((a, b) => {\r\n    return cmp(a.index, b.index) || cmp(a.start, b.start);\r\n  });\r\n  return intervals;\r\n}\r\n\r\n/**\r\n * Returns a map of intervals grouped by the key property\r\n * \r\n * @param {Interval[]} intervals \r\n * @param {string} key \r\n * \r\n * @returns {{[key: string] : Interval[]}}\r\n */\r\nconst grouByIndex = (intervals: Interval[]): IntervalMap => {\r\n  return intervals.reduce((groups, interval) => {\r\n    (groups[interval.index] = groups[interval.index] || []).push(interval);\r\n    return groups;\r\n  }, <IntervalMap>{});\r\n};\r\n\r\n/**\r\n * Merges all the groups by index\r\n * \r\n * @param {IntervalMap} grouped \r\n * @returns {Interval[]}\r\n */\r\nconst weightedMerge = (grouped: IntervalMap): Interval[] => {\r\n  /** @type {Interval[]} */\r\n  let flattened: Interval[] | null = null;\r\n  for (let index of Object.keys(grouped)) {\r\n    merge(grouped[index]);\r\n    if (flattened == null) {\r\n      flattened = grouped[index];\r\n    }\r\n    else {\r\n      flattened = combine(grouped[index], flattened);\r\n    }\r\n  }\r\n  return <Interval[]>flattened;\r\n}\r\n\r\n/**\r\n * Merges a set of intervals with the same index that are \r\n * completely overlapped by another\r\n * \r\n * @param {Interval[]} intervals \r\n * @returns {Interval[]}\r\n */\r\nconst merge = (intervals: Interval[]): Interval[] => {\r\n  if (intervals == null || intervals.length <= 1) return intervals;\r\n\r\n  const result: Interval[] = [];\r\n  let prev = intervals[0];\r\n  for (let i = 1; i < intervals.length; i++) {\r\n    const curr = intervals[i];\r\n\r\n    if (prev.end >= curr.end) {\r\n      // merged case\r\n      const merged = Object.assign({}, prev, { end: Math.max(prev.end, curr.end)});\r\n      prev = merged;\r\n    } else {\r\n      result.push(prev);\r\n      prev = curr;\r\n    }\r\n  }\r\n\r\n  result.push(prev);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Given two sets of intervals it merges them so the highIndexes set has priority\r\n *\r\n * @param {Interval[]} highIndexes\r\n * @param {Interval[]} lowIndexes\r\n * \r\n * @returns {Interval[]}\r\n */\r\nconst combine = (highIndexes: Interval[], lowIndexes: Interval[]): Interval[] => {\r\n  let highCount = 0;\r\n  let lowCount = 0;\r\n\r\n  const merged: Interval[] = [];\r\n\r\n  while (highCount < highIndexes.length || lowCount < lowIndexes.length) {\r\n    // Only low priority left so push it on the stack\r\n    if (highCount === highIndexes.length) {\r\n      merged.push(Object.assign({}, lowIndexes[lowCount]));\r\n      lowCount++;\r\n      // Only high priority left so push it on the stack\r\n    } else if (lowCount === lowIndexes.length) {\r\n      merged.push(Object.assign(highIndexes[highCount]));\r\n      highCount++;\r\n      // if high priority starts first\r\n    } else if (highIndexes[highCount].start <= lowIndexes[lowCount].start) {\r\n      lowIndexes[lowCount].start = Math.max(lowIndexes[lowCount].start, highIndexes[highCount].end);\r\n      if (lowIndexes[lowCount].start >= lowIndexes[lowCount].end) {\r\n        lowCount++;\r\n      }\r\n      merged.push(Object.assign({}, highIndexes[highCount]));\r\n      highCount++;\r\n    } else if (highIndexes[highCount].start >= lowIndexes[lowCount].start) {\r\n      // end point of weak interval before the start of the strong\r\n      if (lowIndexes[lowCount].end <= highIndexes[highCount].start) {\r\n        merged.push(Object.assign({}, lowIndexes[lowCount]));\r\n        lowCount++;\r\n      } else if (highIndexes[highCount].start <= lowIndexes[lowCount].end && lowIndexes[lowCount].end <= highIndexes[highCount].end) {\r\n        lowIndexes[lowCount].end = highIndexes[highCount].start;\r\n        merged.push(Object.assign({}, lowIndexes[lowCount]));\r\n        lowCount++;\r\n      } else if (lowIndexes[lowCount].end >= highIndexes[highCount].end) {\r\n        merged.push(\r\n          Object.assign({}, lowIndexes[lowCount], {\r\n            end: highIndexes[highCount].start\r\n          })\r\n        );\r\n        lowIndexes[lowCount].start = highIndexes[highCount].end;\r\n      }\r\n    }\r\n  }\r\n\r\n  return merged;\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} a\r\n * @param {number} b\r\n */\r\nconst cmp = (a: number, b: number): 1 | -1 | 0 => {\r\n  if (a > b) return +1;\r\n  if (a < b) return -1;\r\n  return 0;\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/methods/flatten.ts","import WaveShaper from '../core/waveshaper';\r\nimport WaveShapeManager from '../core/manager';\r\nimport Segment from '../models/segment';\r\n\r\ninterface DragState {\r\n    activeSegment: Segment | null;\r\n    activeSegmentStart: number;\r\n    dragWave: WaveShaper | null;\r\n}\r\n\r\nconst dragState: DragState = {\r\n    activeSegment: null,\r\n    activeSegmentStart: 0,\r\n    dragWave: null\r\n}\r\n\r\n/**\r\n * Adds drag functionality to waveshaper\r\n * \r\n * @param {WaveShapeManager} manager Waveshape Manager\r\n * @param {HammerManager} hammer Hammer instance\r\n * @param {HTMLElement} container Container element\r\n */\r\nexport default (manager: WaveShapeManager, hammer: HammerManager, container: HTMLElement) => {\r\n\r\n    /** @param {HammerInput} ev - Hammer event */\r\n    const shouldHandle = (ev: HammerInput) => manager.mode === 'drag' && ev.target.classList.contains('waveshaper');\r\n\r\n    /**\r\n     * Fires when the mouse moves over the container,\r\n     * If a segment is being dragged and the pointer moves\r\n     * into another canvas the segment is tranfered to the \r\n     * new canvas.\r\n     */\r\n    if(isTouchDevice()) {\r\n        container.addEventListener('touchmove', ev => mouseHover(ev));\r\n    } else {\r\n        container.addEventListener('mousemove', ev => mouseHover(ev));\r\n    }\r\n\r\n    /**\r\n     * Sets up the drag by finding the \r\n     */\r\n    hammer.on('panstart', (ev: HammerInput) => {\r\n        if (!shouldHandle(ev))\r\n            return;\r\n\r\n        const id = ev.target.getAttribute('data-wave-id');\r\n        if(id == null) return;\r\n\r\n        const wave = manager.waveShapers.get(id);\r\n        if(wave == null) return;\r\n\r\n        const bb = ev.target.getBoundingClientRect();\r\n        const time = (manager.scrollPosition + (ev.center.x - bb.left)) * manager.samplesPerPixel / manager.samplerate;\r\n        const interval = wave.flattened.find(i => i.start <= time && i.end >= time);\r\n\r\n        if (interval == null)\r\n            return;\r\n\r\n        const segment = wave.segments.find(s => s.id === interval.id);\r\n        if(segment == null) return;\r\n\r\n        dragState.activeSegment = segment;\r\n        dragState.activeSegmentStart = dragState.activeSegment.start;\r\n\r\n        dragState.activeSegment.index = 1000;\r\n        dragState.dragWave = wave;\r\n    });\r\n\r\n    hammer.on('panmove', (ev: HammerInput) => {\r\n        if (!shouldHandle(ev))\r\n            return;\r\n\r\n        if (dragState.activeSegment == null || dragState.dragWave == null)\r\n            return;\r\n\r\n        // If the target has moved it is handled by the mouse/touch move manager\r\n        const id = ev.target.getAttribute('data-wave-id');\r\n        if(id !== dragState.dragWave.id)\r\n            return;\r\n\r\n        const change = (ev.deltaX * manager.samplesPerPixel) / manager.samplerate;\r\n        let newTime = dragState.activeSegmentStart + change;\r\n\r\n        if (newTime + dragState.activeSegment.offsetStart < 0) {\r\n            newTime = -dragState.activeSegment.offsetStart;\r\n        }\r\n\r\n        dragState.activeSegment.start = newTime;\r\n        dragState.dragWave.flatten();\r\n        manager.draw([dragState.dragWave.id], true);\r\n    });\r\n\r\n    hammer.on('panend', (ev: HammerInput) => {\r\n        if (!shouldHandle(ev))\r\n            return;\r\n\r\n        dragState.activeSegment = null;\r\n        dragState.activeSegmentStart = 0;\r\n        dragState.dragWave = null;\r\n    });\r\n\r\n    const mouseHover = (ev: TouchEvent | MouseEvent) => {\r\n        if (manager.mode !== 'drag')\r\n            return;\r\n\r\n        if (dragState.activeSegment == null || dragState.dragWave == null)\r\n            return;\r\n\r\n        const canvas = getTouchMouseTargetElement(ev);\r\n        if (canvas == null || !(canvas instanceof HTMLCanvasElement))\r\n            return;\r\n\r\n        const id = canvas.getAttribute('data-wave-id');\r\n        if(id == null) return;\r\n\r\n        const wave = manager.waveShapers.get(id);\r\n        if(wave == null) return;\r\n\r\n        if (dragState.dragWave.id !== id) {\r\n            const index = dragState.dragWave.segments.indexOf(dragState.activeSegment);\r\n            dragState.dragWave.segments.splice(index, 1);\r\n\r\n            wave.segments.push(dragState.activeSegment);\r\n            dragState.activeSegment.index = 1000;\r\n\r\n            manager.flatten([wave.id, dragState.dragWave.id])\r\n            manager.draw([wave.id, dragState.dragWave.id], true);\r\n\r\n            dragState.dragWave = wave;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the actual target from a pointer event\r\n     * @param {TouchEvent | MouseEvent} ev \r\n     */\r\n    const getTouchMouseTargetElement = (ev: TouchEvent | MouseEvent) => {\r\n        if (ev instanceof TouchEvent) {\r\n            /** @type {TouchEvent} */\r\n            const touch = ev;\r\n            return document.elementFromPoint(touch.touches[0].pageX, touch.touches[0].pageY);\r\n        }\r\n        return ev.target;\r\n    }\r\n\r\n    function isTouchDevice() {\r\n        return 'ontouchstart' in window        // works on most browsers \r\n            || navigator.maxTouchPoints;       // works on IE10/11 and Surface\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/drag.ts","import WaveShaper from '../core/waveshaper';\r\nimport WaveShapeManager from '../core/manager';\r\nimport Segment from '../models/segment';\r\n\r\ndeclare type SegmentSide = 'left' | 'right';\r\n\r\ninterface ResizeState {\r\n    activeSegment: Segment | null;\r\n    activeSegmentSide: SegmentSide | null;\r\n    activeSegmentOffsetStart: number;\r\n    activeSegmentOffsetEnd: number;\r\n    dragWave: WaveShaper | null;\r\n}\r\n\r\nconst resizeState: ResizeState = {\r\n    activeSegment: null,\r\n    activeSegmentSide: null,\r\n    activeSegmentOffsetStart: 0,\r\n    activeSegmentOffsetEnd: 0,\r\n    dragWave: null\r\n}\r\n\r\n/**\r\n * Adds drag functionality to waveshaper\r\n * \r\n * @param {WaveShapeManager} manager\r\n * @param {HammerManager} hammer\r\n */\r\nexport default function(manager: WaveShapeManager, hammer: HammerManager) {\r\n\r\n    /** @param {HammerInput} ev */\r\n    const shouldHandle = (ev: HammerInput) => manager.mode === 'resize' && ev != null && ev.target.classList.contains('waveshaper');\r\n\r\n    hammer.on('panstart', (ev) => { \r\n        if(!shouldHandle(ev))\r\n            return;\r\n\r\n        const id = ev.target.getAttribute('data-wave-id');\r\n        if(id == null) return;\r\n\r\n        const wave = manager.waveShapers.get(id);\r\n        if(wave == null) return;\r\n\r\n        const bb = ev.target.getBoundingClientRect();\r\n        const time = (manager.scrollPosition + (ev.center.x - bb.left)) * manager.samplesPerPixel / manager.samplerate;\r\n\r\n        const interval = wave.flattened.find(i => i.start <= time && i.end >= time);\r\n\r\n        if(interval == null) \r\n            return;\r\n\r\n        resizeState.activeSegmentSide = \r\n            time < interval.start + ((interval.end - interval.start) / 2) ? \r\n                'left' : \r\n                'right';\r\n\r\n        const segment = wave.segments.find(s => s.id === interval.id);\r\n        if(segment == null) return;\r\n\r\n        resizeState.activeSegment = segment;\r\n\r\n        resizeState.activeSegmentOffsetStart = segment.offsetStart;\r\n        resizeState.activeSegmentOffsetEnd = segment.offsetEnd;\r\n\r\n        segment.index = 1000;\r\n        resizeState.dragWave = wave;\r\n    });\r\n\r\n    hammer.on('panmove', (ev) =>  {\r\n        if(!shouldHandle(ev) || resizeState.dragWave == null)\r\n            return;\r\n            \r\n        if(resizeState.activeSegment == null)\r\n            return;\r\n\r\n        const change = (ev.deltaX * manager.samplesPerPixel) / manager.samplerate;\r\n        let newTime = resizeState.activeSegmentSide === 'left' ?\r\n            resizeState.activeSegmentOffsetStart + change :\r\n            resizeState.activeSegmentOffsetEnd - change;\r\n\r\n        // Don't allow offset to become less than 0\r\n        if(newTime < 0) {\r\n            newTime = 0;\r\n        }\r\n\r\n        const active = resizeState.activeSegment;\r\n        const newDuration = resizeState.activeSegmentSide === 'left' ?\r\n            (active.start + active.duration) - active.start - newTime - active.offsetEnd :\r\n            (active.start + active.duration) - active.start - active.offsetStart - newTime;\r\n\r\n        // Do not allow resizing \r\n        if(newDuration <= 2) {\r\n            return;\r\n        }\r\n        \r\n        resizeState.activeSegmentSide === 'left' ?\r\n            active.offsetStart = newTime :\r\n            active.offsetEnd = newTime;\r\n\r\n        resizeState.dragWave.flatten();\r\n        manager.draw([resizeState.dragWave.id], true);\r\n    });\r\n\r\n    hammer.on('panend', (ev) => {\r\n        if(!shouldHandle(ev))\r\n            return;\r\n\r\n        resizeState.activeSegment = null;\r\n        resizeState.activeSegmentOffsetStart = 0;\r\n        resizeState.activeSegmentOffsetEnd = 0;\r\n        resizeState.activeSegmentSide = null;\r\n        resizeState.dragWave = null;\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/resize.ts","import WaveShapeManager from '../core/manager';\r\n\r\n/**\r\n * Adds drag functionality to waveshaper\r\n * \r\n * @param {WaveShapeManager} manager\r\n * @param {HammerManager} hammer\r\n */\r\nexport default (manager: WaveShapeManager, hammer: HammerManager) => {\r\n\r\n    const shouldHandle = (ev: HammerInput) => manager.mode === 'cut' && ev.target.classList.contains('waveshaper');\r\n\r\n    hammer.on('tap', (ev: HammerInput) => { \r\n        if(!shouldHandle(ev))\r\n            return;\r\n\r\n        const id = ev.target.getAttribute('data-wave-id');\r\n        if(id == null) return;\r\n\r\n        const wave = manager.waveShapers.get(id);\r\n        if(wave == null) return;\r\n\r\n        const bb = ev.target.getBoundingClientRect();\r\n        const time = (manager.scrollPosition + (ev.center.x - bb.left)) * manager.samplesPerPixel / manager.samplerate;\r\n\r\n        const interval = wave.flattened.find(i => i.start <= time && i.end >= time);\r\n        if(interval == null) return;\r\n\r\n        const segment = wave.segments.find(s => s.id === interval.id);\r\n        if(segment == null) return;\r\n\r\n        const cutTime = time - segment.start;\r\n\r\n        const newSegment = { ...segment }\r\n        newSegment.offsetStart = cutTime;\r\n        newSegment.id = manager.generateId();\r\n\r\n        segment.offsetEnd = segment.duration - cutTime;\r\n        wave.segments.push(newSegment);\r\n        \r\n        wave.flatten();\r\n        manager.draw([wave.id], true);\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/cut.ts","import WaveShapeManager from '../core/manager';\r\n\r\nconst endMargin = 500;\r\n\r\ninterface PanState {\r\n    panStart: number;\r\n    panMax: number;\r\n}\r\n\r\nconst panState: PanState = {\r\n    panStart: 0,\r\n    panMax: 0\r\n}\r\n\r\n/**\r\n * Adds pan functionality to waveshaper\r\n * \r\n * @param {WaveShapeManager} manager\r\n * @param {HammerManager} hammer\r\n */\r\nexport default function(manager: WaveShapeManager, hammer: HammerManager) {\r\n\r\n    /** @param {HammerInput} ev */\r\n    const shouldHandle = (ev: HammerInput) => manager.mode === 'pan' && ev.target.classList.contains('waveshaper');\r\n\r\n    hammer.on('panstart', (ev) => { \r\n        if(!shouldHandle(ev))\r\n            return;\r\n\r\n        panState.panMax = manager.getScrollWidth() + endMargin;\r\n        panState.panStart = manager.scrollPosition;\r\n    });\r\n\r\n    hammer.on('panmove', (ev) =>  {\r\n        if(!shouldHandle(ev))\r\n            return;\r\n\r\n        const newPosition = panState.panStart - ev.deltaX;\r\n\r\n        if(newPosition < 0)\r\n            return;\r\n\r\n        if(newPosition > panState.panMax - manager.width)\r\n            return;\r\n        \r\n        manager.scrollPosition = newPosition;\r\n        manager.draw(null, false);\r\n    });\r\n\r\n    hammer.on('panend', (ev) => {\r\n        if(!shouldHandle(ev))\r\n            return;\r\n\r\n        panState.panStart = 0;\r\n        panState.panMax = 0;\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/pan.ts","import WaveShapeManager from '../core/manager';\r\n\r\nconst endMargin = 500;\r\n\r\ninterface ZoomState {\r\n    maxWidth: number;\r\n    sppStart: number;\r\n}\r\n\r\nconst zoomState: ZoomState = {\r\n    maxWidth: 0,\r\n    sppStart: 0\r\n}\r\n\r\n/**\r\n * Adds pinch zoom functionality to waveshaper\r\n * \r\n * @param {WaveShapeManager} manager\r\n * @param {HammerManager} hammer\r\n */\r\nexport default function(manager: WaveShapeManager, hammer: HammerManager) {\r\n\r\n    const shouldHandle = (ev: HammerInput) => manager.mode === 'pan' && ev.target.classList.contains('waveshaper');\r\n\r\n    hammer.on('pinchstart', (ev) => {\r\n        if(!shouldHandle(ev))\r\n            return;\r\n\r\n        zoomState.sppStart = manager.samplesPerPixel;\r\n        zoomState.maxWidth = manager.getScrollWidth() + endMargin;\r\n    });\r\n\r\n    hammer.on('pinchmove', (ev) => {\r\n        if(!shouldHandle(ev))\r\n            return;\r\n\r\n        const sampleAtLeft = manager.scrollPosition * manager.samplesPerPixel;\r\n        const samplesInView = manager.width * manager.samplesPerPixel;\r\n        const samplesToCenter = samplesInView / 2;\r\n\r\n        const newSpp = zoomState.sppStart * ev.scale;\r\n        const newSamplesInView = manager.width * newSpp;\r\n        const newSamplesToCenter = newSamplesInView / 2;\r\n\r\n        const maxWidth = manager.getScrollWidth() + endMargin;\r\n        const maxSamplesInView = maxWidth  * manager.samplerate;\r\n\r\n        if(newSamplesInView >= maxSamplesInView)\r\n            return;\r\n\r\n        const newScroll = (sampleAtLeft + samplesToCenter - newSamplesToCenter) / newSpp;\r\n\r\n        manager.samplesPerPixel = newSpp;\r\n        manager.scrollPosition = newScroll >= 0 ? newScroll : 0;\r\n\r\n        manager.draw(null, false);\r\n    });\r\n\r\n    hammer.on('pinchend', (ev) => {\r\n        if(!shouldHandle(ev))\r\n            return;\r\n\r\n        zoomState.sppStart = 0;\r\n        zoomState.maxWidth = 0;\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/interaction/zoom.ts","import * as Hammer from 'hammerjs';\r\n\r\nconst hammerOptions: HammerOptions = {\r\n    touchAction : 'pan-y',\r\n    recognizers: [\r\n        [Hammer.Pan, { direction: Hammer.DIRECTION_HORIZONTAL }],\r\n        [Hammer.Pinch, { enable : true }],\r\n        [Hammer.Tap]\r\n    ]\r\n}\r\n\r\nexport default hammerOptions;\n\n\n// WEBPACK FOOTER //\n// ./src/config/hammerconfig.ts","export type MeterType = 'peak' | 'rms';\r\nexport type InteractionMode = 'pan' | 'drag' | 'cut' | 'resize';\r\n\r\nexport type GenerateId = () => string;\r\n\r\nexport interface ManagerOptions {\r\n    scrollPosition: number;\r\n    samplesPerPixel: number;\r\n    resolution: number;\r\n    meterType: MeterType;\r\n    mode: InteractionMode;\r\n    width: number;\r\n    height: number;\r\n    generateId: GenerateId;\r\n}\r\n\r\nconst defaultOptions: ManagerOptions = {\r\n    scrollPosition: 0,\r\n    samplesPerPixel: 1024,\r\n    resolution: 10,\r\n    meterType: 'rms',\r\n    mode: 'pan',\r\n    width: 300,\r\n    height: 150,\r\n    generateId: () => Math.random.toString()\r\n}\r\n\r\nexport default defaultOptions;\n\n\n// WEBPACK FOOTER //\n// ./src/config/managerconfig.ts"],"sourceRoot":""}